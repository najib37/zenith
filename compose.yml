networks:
  internal_net:

configs:
  nginx_conf:
    file: ./compose_utils/nginx.conf

services:
  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: rabbitmq
    networks:
      internal_net:
    ports:
      - 5672:5672
      - 15672:15672
    restart: "on-failure"
    # WARN: delete these variables and use the env file
    # HACK: this is just for debug perposes
    environment:
      - RABBITMQ_DEFAULT_USER=userf
      - RABBITMQ_DEFAULT_PASS=userd
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 15s
      timeout: 5s
      retries: 10
      start_period: 30s


  celery:
    container_name: celery
    # image: python:3.11-alpine
    restart: "on-failure"
    networks: 
      - internal_net
    working_dir: /home/celery
    depends_on:
      rabbitmq: 
        condition: service_healthy
      redis:
        condition: service_healthy
    build:
      context: ./celery/
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    entrypoint:
      sh -c "watchmedo auto-restart --directory=./ --pattern=*.py --recursive -- celery -A tasks.main worker -Q torrent_queue --loglevel=INFO -c 50 --pool=threads"
    volumes:
      - ./celery/:/home/celery
      - /home/nramadan/goinfre/tem/:/home/data/
  redis:
    container_name:  redis
    image: redis:latest
    restart: "on-failure"
    networks:
      internal_net:
    ports: 
      - 6060:6379
    command: redis-server --save 60 1 --loglevel warning
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s

  server: 
    container_name: server
    image: python:3.11-alpine
    restart: "on-failure"
    networks: 
      - internal_net
    working_dir: /home/server
    volumes:
      - ./server/:/home/server/
      # - ./shared_data:/home/server/media
    ports:
      - 8000:8000
    depends_on: 
      celery: 
        condition: service_started
    tty: true
    entrypoint: 
      sh -c "pip install -r requirements.txt --root-user-action=ignore && python manage.py makemigrations && python manage.py migrate && python manage.py runserver server:8000"

  folwer:
    container_name: folwer
    image: python:3.11-alpine
    restart: "on-failure"
    depends_on:
      rabbitmq: 
        condition: service_healthy
      redis:
        condition: service_healthy
      celery:
        condition: service_started
    networks: 
      - internal_net
    ports:
      - 5555:5555
    entrypoint:
      sh -c "pip install flower && celery --broker=amqp://userf:userd@rabbitmq:5672// flower"

  nginx:
    container_name: nginx
    image: nginx:1.27-alpine
    working_dir: /etc/nginx/
    restart: always
    ports:
      - 7070:7070
    volumes:
      - /home/nramadan/goinfre/tem/:/home/data/
    configs:
      - source: nginx_conf
        target: /etc/nginx/conf.d/default.conf
    networks:
      - internal_net
